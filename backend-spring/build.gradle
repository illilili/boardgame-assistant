plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.boardgame'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

import java.util.Properties

def loadEnv() {
	def envFile = file(".env")
	if (envFile.exists()) {
		def props = new Properties()
		envFile.withInputStream { stream -> props.load(stream) }
		props.each { key, value ->
			if (!System.getenv().containsKey(key)) {
				System.setProperty(key.toString(), value.toString())
			}
		}
	}
}

gradle.beforeProject {
	loadEnv()
}

dependencies {
	// Spring Data & Web
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-validation'// 외부 API 호출용

	// Spring Security (인증/인가)
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-crypto' // 비밀번호 암호화용

	// JWT (JSON Web Token)
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// 개발 편의 기능
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// MariaDB 드라이버
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// Spring Boot 구성 설정용
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// AWS S3
	implementation 'software.amazon.awssdk:s3:2.25.12'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.657'

	// .env 환경변수 로딩
	implementation 'io.github.cdimascio:dotenv-java:2.2.4'
}

tasks.named('test') {
	useJUnitPlatform()
}
